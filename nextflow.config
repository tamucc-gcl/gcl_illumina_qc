// nextflow.config

process {
  executor = 'slurm'
  queue = 'normal'
  scratch = true
  errorStrategy = 'retry'
  maxRetries = 2

  publishDir = [ path: 'results', mode: 'copy' ]

  withLabel: fastp3 {
    publishDir = [ path: 'data/fq_fp1', mode: 'copy', overwrite: true ]
    conda = 'bioconda::fastp'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: fastp5 {
    publishDir = [ path: 'data/fq_fp1_clmp_fp2', mode: 'copy', overwrite: true ]
    conda = 'bioconda::fastp'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: clumpify {
    publishDir = [ path: 'data/fq_fp1_clmp', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bbmap'
    cpus = 64
    time = '96h'
    //memory = '16 GB'
  }

  withLabel: fastq_screen {
    publishDir = [ path: 'data/fq_fp1_clmp_fp2_fqscrn', mode: 'copy', overwrite: true ]
    conda = 'bioconda::fastq-screen'
    cpus = 64
    time = '96h'
    //memory = '48 GB'
  }

  withLabel: repair {
    publishDir = [ path: 'data/fq_fp1_clmp_fp2_fqscrn_rpr', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bbmap'
    cpus = 64
    time = '96h'
    //memory = '12 GB'
  }

  withLabel: map_reads {
    publishDir = [ path: 'data/bam', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bwa-mem2 bioconda::samtools'
    cpus = 64
    time = '96h'
    //memory = '64 GB'
  }

  withLabel: samtools_stats {
    publishDir = [ path: 'results/bam_stats', mode: 'copy', overwrite: true, enabled: false ]
    conda = 'bioconda::samtools'
    cpus = 64
    time = '96h'
    //memory = '8 GB'
  }

  withLabel: fastqc {
    publishDir = [ path: 'results/fastqc', mode: 'copy', overwrite: true, enabled: false ]
    conda = 'bioconda::fastqc'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: multiqc {
    publishDir = [ path: 'results/multiqc', mode: 'copy', overwrite: true ]
    conda = 'bioconda::multiqc'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: fetch_genome {
    publishDir = [ path: './genome', mode: 'copy', overwrite: true ]
    conda = 'conda-forge::ncbi-datasets-cli'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: index_genome {
    publishDir = [ path: './genome', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bwa-mem2'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: r_analysis {
    publishDir = [ path: 'results', mode: 'copy', overwrite: true ]
    conda = 'conda-forge::r-base=4.3 conda-forge::r-tidyverse conda-forge::r-glmmtmb=1.1.9 conda-forge::r-tmb=1.9.16 conda-forge::r-emmeans conda-forge::r-broom conda-forge::r-multcomp conda-forge::r-janitor conda-forge::r-patchwork conda-forge::r-ggtext conda-forge::r-scales conda-forge::r-multcompview conda-forge::r-ggrepel conda-forge::cmake conda-forge::make conda-forge::gcc_linux-64 conda-forge::gxx_linux-64 conda-forge::gfortran_linux-64'
    cpus = 64
    time = '96h'
    //memory = '48 GB'
  }

  withLabel: 'samtools_summary' {
      publishDir = [ path: 'results/bam_stats', mode: 'copy', overwrite: true ]
      cpus = 64
      //memory = '2 GB'
      time = '96h'
  }
}

conda {
  enabled = true
  cacheDir = '/work/birdlab/.conda_builds'
  autoActivate = true
  channels = ['bioconda', 'conda-forge', 'defaults']
}

// Pipeline parameters
params {
  // Input parameters
  reads = "data/fq_raw/*.{1,2}.fq.gz"
  accession = "GCA_042920385.1"
  
  // Output parameters
  outdir = "results"
  multiqc_dir = "${params.outdir}/multiqc"
  
  // Resource limits
  max_cpus = 64
  //max_memory = '256.GB'
  max_time = '96.h'
}

// Execution profiles
profiles {
  slurm {
    process.executor = 'slurm'
  }
  
  local {
    process.executor = 'local'
    process.cpus = 4
    //process.memory = '8 GB'
  }
  
  docker {
    docker.enabled = true
    process.container = 'quay.io/biocontainers/nextflow:latest'
  }
}

// Enable timeline and resource reports
timeline {
  enabled = true
  overwrite = true
  file = "${params.outdir}/pipeline/pipeline_timeline.html"
}

report {
  enabled = true
  overwrite = true
  file = "${params.outdir}/pipeline/pipeline_report.html"
}

trace {
  enabled = true
  overwrite = true
  file = "${params.outdir}/pipeline/pipeline_trace.txt"
}

// Enhanced DAG configuration in nextflow.config
dag {
  enabled = true
  overwrite = true
  file = "${params.outdir}/pipeline/pipeline_dag.png"
  
  // Additional styling options
  graph {
    // Graph-level attributes
    rankdir = 'TB'          // Top to bottom layout (TB, BT, LR, RL)
    bgcolor = 'white'       // Background color
    fontname = 'Arial'      // Font for the graph
    fontsize = 14           // Font size
    dpi = 300              // Resolution for PNG output
  }
  
  node {
    // Node-level attributes
    shape = 'box'           // Node shape (box, ellipse, circle, etc.)
    style = 'rounded,filled' // Node style
    fillcolor = 'lightblue' // Default fill color
    fontname = 'Arial'      // Font for nodes
    fontsize = 12           // Font size for nodes
  }
  
  edge {
    // Edge-level attributes
    color = 'gray'          // Edge color
    fontname = 'Arial'      // Font for edge labels
    fontsize = 10           // Font size for edge labels
  }
}