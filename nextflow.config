// nextflow.config

process {
  executor = 'slurm'
  queue = 'normal'
  scratch = true
  errorStrategy = 'retry'
  maxRetries = 2
  queueSize = 25

  // REMOVE the default publishDir - don't publish by default
  // publishDir = [ path: 'results', mode: 'copy' ]

  withLabel: fastp3 {
    // Don't publish intermediate files
    conda = 'bioconda::fastp'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: fastp5 {
    // Don't publish intermediate files
    conda = 'bioconda::fastp'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: clumpify {
    // Don't publish intermediate files
    conda = 'bioconda::bbmap'
    cpus = 64
    time = '96h'
    //memory = '16 GB'
  }

  withLabel: fastq_screen {
    // Don't publish intermediate files
    conda = 'bioconda::fastq-screen'
    cpus = 64
    time = '96h'
    //memory = '48 GB'
  }

  withLabel: repair {
    // Don't publish intermediate files
    conda = 'bioconda::bbmap'
    cpus = 64
    time = '96h'
    //memory = '12 GB'
  }

  withLabel: map_reads {
    // KEEP THIS - publish BAM files
    publishDir = [ path: 'data/bam', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bwa-mem2 bioconda::samtools'
    cpus = 64
    time = '96h'
    //memory = '64 GB'
  }

  withLabel: samtools_stats {
    // Don't publish - intermediate files only
    conda = 'bioconda::samtools'
    cpus = 64
    time = '96h'
    //memory = '8 GB'
  }

  withLabel: fastqc {
    // Don't publish - included in MultiQC reports
    conda = 'bioconda::fastqc'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: multiqc {
    // KEEP THIS - publish MultiQC reports
    publishDir = [ path: 'results/multiqc_reports', mode: 'copy', overwrite: true ]
    conda = 'bioconda::multiqc'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: fetch_genome {
    // KEEP THIS - publish genome files
    publishDir = [ path: './genome', mode: 'copy', overwrite: true ]
    conda = 'conda-forge::ncbi-datasets-cli'
    cpus = 64
    time = '96h'
    //memory = '4 GB'
  }

  withLabel: index_genome {
    // KEEP THIS - publish genome index
    publishDir = [ path: './genome', mode: 'copy', overwrite: true ]
    conda = 'bioconda::bwa-mem2 bioconda::samtools bioconda::gatk bioconda::picard'
    cpus = 64
    time = '96h'
    //memory = '32 GB'
  }

  withLabel: r_analysis {
    // KEEP THIS - publish analysis results
    publishDir = [ path: 'results/read_analysis', mode: 'copy', overwrite: true ]
    conda = 'conda-forge::r-base=4.3 conda-forge::r-tidyverse conda-forge::r-glmmtmb=1.1.9 conda-forge::r-tmb=1.9.16 conda-forge::r-emmeans conda-forge::r-broom conda-forge::r-multcomp conda-forge::r-janitor conda-forge::r-patchwork conda-forge::r-ggtext conda-forge::r-scales conda-forge::r-multcompview conda-forge::r-ggrepel conda-forge::cmake conda-forge::make conda-forge::gcc_linux-64 conda-forge::gxx_linux-64 conda-forge::gfortran_linux-64'
    cpus = 64
    time = '96h'
    //memory = '48 GB'
  }

  withLabel: 'samtools_summary' {
	publishDir = [ path: 'results/read_analysis', mode: 'copy', overwrite: true ]
    cpus = 64
    //memory = '2 GB'
    time = '96h'
  }
  
  withLabel: stage_genome {
    // KEEP THIS - publish staged genome
    publishDir = [ path: './genome', mode: 'copy', overwrite: true ]
    cpus = 5
    time = '96h'
  }
   
  withLabel: generate_report {
    // KEEP THIS - publish final report
    publishDir = [ path: 'results', mode: 'copy', overwrite: true ]
    conda = 'conda-forge::python=3.9 conda-forge::ncbi-datasets-cli conda-forge::pandoc'
    cpus = 2
    time = '1h'
    //memory = '4 GB'
  }
}

conda {
  enabled = true
  cacheDir = '/work/birdlab/.conda_builds'
  autoActivate = true
  channels = ['bioconda', 'conda-forge', 'defaults']
  createTimeout = '2 h'
}

// Pipeline parameters
params {
  // Input parameters
  reads = "data/fq_raw/*.{1,2}.fq.gz"
  genome = null
  accession = null
  
  // Output parameters
  outdir = "results"
  multiqc_dir = "${params.outdir}/multiqc"
  
  // Resource limits
  max_cpus = 64
  //max_memory = '256.GB'
  max_time = '96.h'
}

// Execution profiles
profiles {
  slurm {
    process.executor = 'slurm'
  }
  
  local {
    process.executor = 'local'
    process.cpus = 4
    //process.memory = '8 GB'
  }
  
  docker {
    docker.enabled = true
    process.container = 'quay.io/biocontainers/nextflow:latest'
  }
}

// Enable timeline and resource reports
timeline {
  enabled = true
  overwrite = true
  file = "${params.outdir}/qc_pipeline/pipeline_timeline.html"
}

report {
  enabled = true
  overwrite = true
  file = "${params.outdir}/qc_pipeline/pipeline_report.html"
}

trace {
  enabled = true
  overwrite = true
  file = "${params.outdir}/qc_pipeline/pipeline_trace.txt"
}

// Enhanced DAG configuration in nextflow.config
dag {
  enabled = true
  overwrite = true
  file = "${params.outdir}/qc_pipeline/pipeline_dag.png"
  
  // Additional styling options
  graph {
    // Graph-level attributes
    rankdir = 'TB'          // Top to bottom layout (TB, BT, LR, RL)
    bgcolor = 'white'       // Background color
    fontname = 'Arial'      // Font for the graph
    fontsize = 14           // Font size
    dpi = 300              // Resolution for PNG output
  }
  
  node {
    // Node-level attributes
    shape = 'box'           // Node shape (box, ellipse, circle, etc.)
    style = 'rounded,filled' // Node style
    fillcolor = 'lightblue' // Default fill color
    fontname = 'Arial'      // Font for nodes
    fontsize = 12           // Font size for nodes
  }
  
  edge {
    // Edge-level attributes
    color = 'gray'          // Edge color
    fontname = 'Arial'      // Font for edge labels
    fontsize = 10           // Font size for edge labels
  }
}